// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reactivities.Persistance;

#nullable disable

namespace Reactivities.Persistance.Migrations
{
    [DbContext(typeof(ReactivitiesDataContext))]
    [Migration("20220806121018_dataseed")]
    partial class dataseed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Reactivities.Domain.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "drinks",
                            City = "London",
                            Date = new DateTime(2022, 6, 6, 14, 10, 18, 156, DateTimeKind.Local).AddTicks(7870),
                            Description = "Activity 2 months ago",
                            Title = "Past Activity 1",
                            Venue = "Pub"
                        },
                        new
                        {
                            Id = 2,
                            Category = "culture",
                            City = "Paris",
                            Date = new DateTime(2022, 7, 6, 14, 10, 18, 156, DateTimeKind.Local).AddTicks(7896),
                            Description = "Activity 1 month ago",
                            Title = "Past Activity 2",
                            Venue = "The Louvre"
                        },
                        new
                        {
                            Id = 3,
                            Category = "music",
                            City = "London",
                            Date = new DateTime(2022, 9, 6, 14, 10, 18, 156, DateTimeKind.Local).AddTicks(7899),
                            Description = "Activity 1 month in future",
                            Title = "Future Activity 1",
                            Venue = "Wembly Stadium"
                        },
                        new
                        {
                            Id = 4,
                            Category = "food",
                            City = "London",
                            Date = new DateTime(2022, 10, 6, 14, 10, 18, 156, DateTimeKind.Local).AddTicks(7901),
                            Description = "Activity 2 months in future",
                            Title = "Future Activity 2",
                            Venue = "Jamies Italian"
                        },
                        new
                        {
                            Id = 5,
                            Category = "drinks",
                            City = "London",
                            Date = new DateTime(2022, 11, 6, 14, 10, 18, 156, DateTimeKind.Local).AddTicks(7973),
                            Description = "Activity 3 months in future",
                            Title = "Future Activity 3",
                            Venue = "Pub"
                        },
                        new
                        {
                            Id = 6,
                            Category = "culture",
                            City = "London",
                            Date = new DateTime(2022, 12, 6, 14, 10, 18, 156, DateTimeKind.Local).AddTicks(7977),
                            Description = "Activity 4 months in future",
                            Title = "Future Activity 4",
                            Venue = "British Museum"
                        },
                        new
                        {
                            Id = 7,
                            Category = "drinks",
                            City = "London",
                            Date = new DateTime(2023, 1, 6, 14, 10, 18, 156, DateTimeKind.Local).AddTicks(7978),
                            Description = "Activity 5 months in future",
                            Title = "Future Activity 5",
                            Venue = "Punch and Judy"
                        },
                        new
                        {
                            Id = 8,
                            Category = "music",
                            City = "London",
                            Date = new DateTime(2023, 2, 6, 14, 10, 18, 156, DateTimeKind.Local).AddTicks(7980),
                            Description = "Activity 6 months in future",
                            Title = "Future Activity 6",
                            Venue = "O2 Arena"
                        },
                        new
                        {
                            Id = 9,
                            Category = "travel",
                            City = "Berlin",
                            Date = new DateTime(2023, 3, 6, 14, 10, 18, 156, DateTimeKind.Local).AddTicks(7982),
                            Description = "Activity 7 months in future",
                            Title = "Future Activity 7",
                            Venue = "All"
                        },
                        new
                        {
                            Id = 10,
                            Category = "drinks",
                            City = "London",
                            Date = new DateTime(2023, 4, 6, 14, 10, 18, 156, DateTimeKind.Local).AddTicks(7983),
                            Description = "Activity 8 months in future",
                            Title = "Future Activity 8",
                            Venue = "Pub"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
